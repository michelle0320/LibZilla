apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
group='com.github.zillachan'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion MINI_SDK_VERSION as int
        targetSdkVersion COMPILE_SDK_VERSION as int
        versionCode VERSION_CODE as int
        versionName VERSION_NAME
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.github.zillachan:AndLog:1.1'
//    compile 'com.github.snowdream.android.util:log:1.0.4'
    compile 'joda-time:joda-time:2.3'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'com.squareup.retrofit:retrofit:1.8.0'

//    compile 'com.google.code.gson:gson:2.5' // gson
//    compile 'com.squareup.retrofit2:converter-gson:2.0.1'
//    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.1'//rxjava support
    //retrofit 2.0 support
//    compile 'com.squareup.retrofit2:retrofit:2.0.1'
    //logLevel
//    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'
//    compile 'com.mobsandgeeks:android-saripaar:1.0.3'
    compile 'com.squareup.picasso:picasso:2.4.0'
//    compile 'com.jakewharton:butterknife:6.0.0'
    //butterknife 7 support
//    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.squareup:otto:1.3.5'
    //aspectj
//    compile 'org.aspectj:aspectjrt:1.8.1'
}


// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}